{"ast":null,"code":"var _jsxFileName = \"/Users/macbookairm1/Documents/personal_projects/CourtCheck/frontend/src/components/VideoUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\n// Mock data for demonstration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MOCK_VIDEO = {\n  name: 'tennis_match.mp4',\n  size: '128MB',\n  duration: '2:15:30'\n};\nconst VideoUpload = ({\n  onUploadComplete\n}) => {\n  _s();\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [processingStage, setProcessingStage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const onDrop = useCallback(async acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (!file) return;\n    setSelectedFile(file);\n    setIsUploading(true);\n    setProcessingStage('Uploading video...');\n\n    // Simulate upload progress\n    const progressInterval = setInterval(() => {\n      setUploadProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(progressInterval);\n          return 100;\n        }\n        return prev + 10;\n      });\n    }, 300);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      setProcessingStage('Processing video...');\n      // Simulate processing stages with realistic timing\n      const stages = [{\n        stage: 'Detecting court...',\n        duration: 2000\n      }, {\n        stage: 'Tracking players...',\n        duration: 3000\n      }, {\n        stage: 'Analyzing ball movement...',\n        duration: 2500\n      }, {\n        stage: 'Generating analytics...',\n        duration: 2000\n      }];\n      for (const {\n        stage,\n        duration\n      } of stages) {\n        setProcessingStage(stage);\n        await new Promise(resolve => setTimeout(resolve, duration));\n      }\n      onUploadComplete && onUploadComplete();\n    } catch (error) {\n      console.error('Upload failed:', error);\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n      setProcessingStage('');\n    }\n  }, [onUploadComplete]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'video/*': ['.mp4', '.mov', '.avi']\n    },\n    maxFiles: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl mx-auto p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\n          ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-blue-400'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), !isUploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-6xl mb-4\",\n          children: \"\\uD83C\\uDFBE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-700\",\n          children: isDragActive ? 'Drop your tennis match video here' : 'Drag & drop your tennis match video'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"or click to select a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400\",\n          children: \"Supported formats: MP4, MOV, AVI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 bg-gray-50 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Demo video available:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-medium text-gray-700\",\n            children: MOCK_VIDEO.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500\",\n            children: [\"Size: \", MOCK_VIDEO.size, \" \\u2022 Duration: \", MOCK_VIDEO.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-semibold text-gray-700\",\n          children: processingStage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-gray-200 rounded-full h-2.5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 h-2.5 rounded-full transition-all duration-300\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Please wait while we process your video...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoUpload, \"q4zbzvBSGK/GpImGTqERoyPYvb0=\", false, function () {\n  return [useDropzone];\n});\n_c = VideoUpload;\nexport default VideoUpload;\nvar _c;\n$RefreshReg$(_c, \"VideoUpload\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","jsxDEV","_jsxDEV","MOCK_VIDEO","name","size","duration","VideoUpload","onUploadComplete","_s","isUploading","setIsUploading","uploadProgress","setUploadProgress","processingStage","setProcessingStage","selectedFile","setSelectedFile","onDrop","acceptedFiles","file","progressInterval","setInterval","prev","clearInterval","Promise","resolve","setTimeout","stages","stage","error","console","getRootProps","getInputProps","isDragActive","accept","maxFiles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["/Users/macbookairm1/Documents/personal_projects/CourtCheck/frontend/src/components/VideoUpload.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\n// Mock data for demonstration\nconst MOCK_VIDEO = {\n  name: 'tennis_match.mp4',\n  size: '128MB',\n  duration: '2:15:30'\n};\n\nconst VideoUpload = ({ onUploadComplete }) => {\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [processingStage, setProcessingStage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const onDrop = useCallback(async (acceptedFiles) => {\n    const file = acceptedFiles[0];\n    if (!file) return;\n\n    setSelectedFile(file);\n    setIsUploading(true);\n    setProcessingStage('Uploading video...');\n    \n    // Simulate upload progress\n    const progressInterval = setInterval(() => {\n      setUploadProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(progressInterval);\n          return 100;\n        }\n        return prev + 10;\n      });\n    }, 300);\n\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      \n      setProcessingStage('Processing video...');\n      // Simulate processing stages with realistic timing\n      const stages = [\n        { stage: 'Detecting court...', duration: 2000 },\n        { stage: 'Tracking players...', duration: 3000 },\n        { stage: 'Analyzing ball movement...', duration: 2500 },\n        { stage: 'Generating analytics...', duration: 2000 }\n      ];\n      \n      for (const { stage, duration } of stages) {\n        setProcessingStage(stage);\n        await new Promise(resolve => setTimeout(resolve, duration));\n      }\n\n      onUploadComplete && onUploadComplete();\n    } catch (error) {\n      console.error('Upload failed:', error);\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n      setProcessingStage('');\n    }\n  }, [onUploadComplete]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'video/*': ['.mp4', '.mov', '.avi']\n    },\n    maxFiles: 1\n  });\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto p-6\">\n      <div\n        {...getRootProps()}\n        className={`border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\n          ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-blue-400'}`}\n      >\n        <input {...getInputProps()} />\n        \n        {!isUploading ? (\n          <div className=\"space-y-4\">\n            <div className=\"text-6xl mb-4\">🎾</div>\n            <h3 className=\"text-xl font-semibold text-gray-700\">\n              {isDragActive ? 'Drop your tennis match video here' : 'Drag & drop your tennis match video'}\n            </h3>\n            <p className=\"text-gray-500\">or click to select a file</p>\n            <p className=\"text-sm text-gray-400\">Supported formats: MP4, MOV, AVI</p>\n            \n            {/* Demo video info */}\n            <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n              <p className=\"text-sm text-gray-600\">Demo video available:</p>\n              <p className=\"text-sm font-medium text-gray-700\">{MOCK_VIDEO.name}</p>\n              <p className=\"text-xs text-gray-500\">Size: {MOCK_VIDEO.size} • Duration: {MOCK_VIDEO.duration}</p>\n            </div>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            <div className=\"text-2xl font-semibold text-gray-700\">{processingStage}</div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n              <div\n                className=\"bg-blue-600 h-2.5 rounded-full transition-all duration-300\"\n                style={{ width: `${uploadProgress}%` }}\n              ></div>\n            </div>\n            <p className=\"text-sm text-gray-500\">Please wait while we process your video...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}